# Native for Windows
#
# Copyright (c) 2015 by Appcelerator, Inc. All Rights Reserved.
# Licensed under the terms of the Apache Public License.
# Please see the LICENSE included with this distribution for details.
cmake_minimum_required(VERSION 3.0.0)

if (${CMAKE_SYSTEM_VERSION} STREQUAL "10.0")
  set(PLATFORM win10)
elseif(${CMAKE_SYSTEM_NAME} STREQUAL "WindowsPhone")
  set(PLATFORM phone)
  add_definitions("-DPHONE")
elseif(${CMAKE_SYSTEM_NAME} STREQUAL "WindowsStore")
  set(PLATFORM store)
else()
  message(FATAL_ERROR "This app supports Store / Phone only.")
endif()

project(TitaniumWindows_Native)

set(TitaniumWindows_Native_VERSION 0.1.0)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE ON)

option(TitaniumWindows_Native_DISABLE_TESTS "Disable compiling the tests" ON)

# Use solution folders.
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

get_filename_component(APPCELERATOR_CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/../cmake ABSOLUTE)
list(INSERT CMAKE_MODULE_PATH 0 ${APPCELERATOR_CMAKE_MODULE_PATH})

# Define helper functions and macros.
include(${APPCELERATOR_CMAKE_MODULE_PATH}/internal_utils.cmake)

# Defined in internal_utils.cmake.
config_compiler_and_linker()

file(GLOB_RECURSE WINDOWS_WRAPPERS "src/*.cpp")
file(GLOB_RECURSE WINDOWS_HEADERS "include/*.hpp")

set(SOURCE_Native
${WINDOWS_WRAPPERS}
${WINDOWS_HEADERS}
  )

source_group(Titanium\\Native FILES ${SOURCE_Native})

set(CMAKE_CXX_VISIBILITY_PRESET hidden)
set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)

add_library(TitaniumWindows_Native SHARED
  ${SOURCE_Native}
  )

include(GenerateExportHeader)
generate_export_header(TitaniumWindows_Native)
target_compile_definitions(TitaniumWindows_Native PRIVATE TitaniumWindows_Native_EXPORTS)

target_link_libraries(TitaniumWindows_Native ${TitaniumWindows_Filesystem_LIBRARIES})
target_link_libraries(TitaniumWindows_Native ${TitaniumWindows_Global_LIBRARIES})
target_link_libraries(TitaniumWindows_Native HAL)
target_link_libraries(TitaniumWindows_Native ${LayoutEngine_LIBRARIES})
target_link_libraries(TitaniumWindows_Native ${TitaniumWindows_Map_LIBRARIES})
target_link_libraries(TitaniumWindows_Native ${TitaniumWindows_Media_LIBRARIES})
target_link_libraries(TitaniumWindows_Native ${TitaniumWindows_Network_LIBRARIES})
target_link_libraries(TitaniumWindows_Native ${TitaniumWindows_Sensors_LIBRARIES})
target_link_libraries(TitaniumWindows_Native ${TitaniumWindows_Ti_LIBRARIES})
target_link_libraries(TitaniumWindows_Native ${TitaniumWindows_LIBRARIES})
target_link_libraries(TitaniumWindows_Native TitaniumKit)
target_link_libraries(TitaniumWindows_Native TitaniumWindows_UI)
target_link_libraries(TitaniumWindows_Native TitaniumWindows_Utility)

<% for(var i = 0; i < native_modules.length; i++) { -%>
target_link_libraries(TitaniumWindows_Native <%= native_modules[i].projectname %>)
<% } -%>

target_include_directories(TitaniumWindows_Native PUBLIC
  ${PROJECT_SOURCE_DIR}/include
  ${TitaniumWindows_Filesystem_INCLUDE_DIRS}
  ${TitaniumWindows_Global_INCLUDE_DIRS}
  $<TARGET_PROPERTY:HAL,INTERFACE_INCLUDE_DIRECTORIES>
  ${LayoutEngine_INCLUDE_DIRS}
  ${TitaniumWindows_Map_INCLUDE_DIRS}
  ${TitaniumWindows_Media_INCLUDE_DIRS}
  ${TitaniumWindows_Network_INCLUDE_DIRS}
  ${TitaniumWindows_Sensors_INCLUDE_DIRS}
  ${TitaniumWindows_Ti_INCLUDE_DIRS}
  ${TitaniumWindows_INCLUDE_DIRS}
  $<TARGET_PROPERTY:TitaniumKit,INTERFACE_INCLUDE_DIRECTORIES>
  $<TARGET_PROPERTY:TitaniumWindows_UI,INTERFACE_INCLUDE_DIRECTORIES>
  $<TARGET_PROPERTY:TitaniumWindows_Utility,INTERFACE_INCLUDE_DIRECTORIES>
<% for(var i = 0; i < native_modules.length; i++) { -%>
  $<TARGET_PROPERTY:<%= native_modules[i].projectname %>,INTERFACE_INCLUDE_DIRECTORIES>
<% } -%>
)

set_target_properties(TitaniumWindows_Native PROPERTIES VS_WINRT_COMPONENT TRUE)

set_property(TARGET TitaniumWindows_Native
  PROPERTY VS_WINRT_REFERENCES
  "${WINDOWS_SOURCE_DIR}/lib/TitaniumWindows/${PLATFORM}/${Ti_ARCH}/TitaniumWindows.winmd"
  "${WINDOWS_SOURCE_DIR}/lib/TitaniumWindows_UI/${PLATFORM}/${Ti_ARCH}/TitaniumWindows_UI.winmd"
  "${WINDOWS_SOURCE_DIR}/lib/TitaniumWindows_Utility/${PLATFORM}/${Ti_ARCH}/TitaniumWindows_Utility.winmd"
<% for(var i = 0; i < native_modules.length; i++) { -%>
  "<%= native_modules[i].path %>/${PLATFORM}/${Ti_ARCH}/<%= native_modules[i].projectname %>.winmd"
  <% if (native_modules[i].projectname == 'Hyperloop') { -%>
  "${PROJECT_SOURCE_DIR}/../TitaniumWindows_Hyperloop/bin/${PLATFORM}/Release/TitaniumWindows_Hyperloop.winmd"
  "<%= native_modules[i].path %>/${PLATFORM}/${Ti_ARCH}/HyperloopInvocation.winmd"
  <% } -%>
<% } -%>
)

# Silence this warning when lnking the Debug configuration:
#
# "LINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:ICF'
# specification ..."
#
# According to "/IGNORE (Ignore Specific Warnings)" (see
# http://msdn.microsoft.com/en-us/library/dn782850.aspx) some linker
# warnings cannot be ignored and LNK4075 is one of them. However,
# according to "/INCREMENTAL (Link Incrementally)" (see
# http://msdn.microsoft.com/en-us/library/4khtbfyf.aspx):
#
# "Most programs can be linked incrementally. However, some changes
# are too great, and some options are incompatible with incremental
# linking. LINK performs a full link if any of the following options
# are specified:
# ...
# /OPT:REF is selected
# /OPT:ICF is selected
# ..."
#
# And according to "/OPT (Optimizations)" (see
# http://msdn.microsoft.com/en-us/library/bxwfs976.aspx):
#
# "If /DEBUG is specified, the default for /OPT is NOREF, and all
# functions are preserved in the image."
#
# As well as:
#
# "... we do not recommend that you use /OPT:ICF in debug builds ..."
#
# Therefore we disable /OPT:REF and /OPT:ICF for the Debug
# configuration.
set_property(TARGET TitaniumWindows_Native APPEND_STRING PROPERTY LINK_FLAGS_DEBUG "/OPT:NOREF /OPT:NOICF")
# Fix error C1128: number of sections exceeded object file format limit
set_property(TARGET TitaniumWindows_Native APPEND_STRING PROPERTY COMPILE_FLAGS "/bigobj")
