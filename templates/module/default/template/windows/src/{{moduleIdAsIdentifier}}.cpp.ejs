/**
 * Titanium Windows Native Module - <%- moduleName %>
 *
 * Copyright (c) 2015 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License.
 * Please see the LICENSE included with this distribution for details.
 */
#include "<%- moduleIdAsIdentifier %>.hpp"
#include "Titanium/detail/TiImpl.hpp"
#include "TitaniumWindows/LogForwarder.hpp"

<%
  function capitalize(str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
  }
  var namespaces = moduleId.split('.'),
      indent = Array(namespaces.length-1).join('\t'),
      className = moduleIdAsIdentifier;
  for(var i = 0; i < namespaces.length; i++) {
    if (i < namespaces.length - 1) { -%>
<%-   Array(i+1).join('\t') %>namespace <%- capitalize(namespaces[i]) %>
<%-   Array(i+1).join('\t') %>{
<%  } else {
      className = capitalize(namespaces[i]);
    }
  }
-%>
<%- indent %>	<%- className %>::<%- className %>(const JSContext& js_context) TITANIUM_NOEXCEPT
<%- indent %>		: JSExportObject(js_context)
<%- indent %>	{
<%- indent %>		TITANIUM_LOG_DEBUG("<%- className %>::ctor Initialize");
<%- indent %>	}

<%- indent %>	void <%- className %>::postInitialize(JSObject& js_object)
<%- indent %>	{
<%- indent %>	}

<%- indent %>	void <%- className %>::postCallAsConstructor(const JSContext& js_context, const std::vector<JSValue>& arguments)
<%- indent %>	{
<%- indent %>	}

<%- indent %>	void <%- className %>::JSExportInitialize()
<%- indent %>	{
<%- indent %>		JSExport<<%- className %>>::SetClassVersion(1);
<%- indent %>		JSExport<<%- className %>>::SetParent(JSExport<JSExportObject>::Class());
<%- indent %>	}
<%  for(var i = namespaces.length-1; i > 0; i--) { -%>
<%- 	Array(i).join('\t') %>}
<%  } -%>
